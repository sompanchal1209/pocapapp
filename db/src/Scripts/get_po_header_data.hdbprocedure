PROCEDURE "get_po_header_data"( OUT EX_TOP_3_EMP_PO_COMBINED_CNT TABLE(
    LOGINNAME NVARCHAR(12),
    CREATE_CNT INTEGER,
    CHANGE_CNT INTEGER,
    COMBINED_CNT INTEGER,
    FULLNAME varchar(256)))
LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic
   *************************************/

    EX_PO_CREATE_CNT = SELECT COUNT(*) AS CREATE_CNT, "CREATEDBY" as EID
     FROM "SOM_DB_TRANSACTION_PURCHASEORDER" WHERE ID IN (
                     SELECT "PARENT_KEY_ID"
                          FROM "SOM_DB_TRANSACTION_POITEMS"
          WHERE "PRODUCT_GUID_NODE_KEY" IS NOT NULL)
            GROUP BY  "CREATEDBY";

    EX_PO_CHANGE_CNT = SELECT COUNT(*) AS CHANGE_CNT, "MODIFIEDBY" as EID
     FROM "SOM_DB_TRANSACTION_PURCHASEORDER"  WHERE ID IN (
                     SELECT "PARENT_KEY_ID"
                          FROM "SOM_DB_TRANSACTION_POITEMS"
          WHERE "PRODUCT_GUID_NODE_KEY" IS NOT NULL)
             GROUP BY  "MODIFIEDBY";

    EX_TOP_3_EMP_PO_COMBINED_CNT =
        SELECT emp.LOGINNAME, crcnt.CREATE_CNT, chcnt.CHANGE_CNT,  crcnt.CREATE_CNT +
        chcnt.CHANGE_CNT AS COMBINED_CNT,
        NAMEFIRST as FULLNAME
        ----"get_full_name"( "NAMEFIRST", "NAMEMIDDLE", "NAMELAST") as FULLNAME
            FROM "SOM_DB_MASTER_EMPLOYEES" as emp
            LEFT OUTER JOIN :EX_PO_CREATE_CNT AS crcnt
             ON emp.ID = crcnt.EID
           LEFT OUTER JOIN :EX_PO_CHANGE_CNT AS chcnt
           ON emp.ID = chcnt.EID
          ORDER BY COMBINED_CNT DESC LIMIT 3 OFFSET 3;
END